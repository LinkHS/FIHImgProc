/*
	This source file contains additional function for dehazing algorithm.

	The detailed description of the algorithm is presented
	in "http://mcl.korea.ac.kr/projects/dehazing". See also 
	J.-H. Kim, W.-D. Jang, Y. Park, D.-H. Lee, J.-Y. Sim, C.-S. Kim, "Temporally
	coherent real-time video dehazing," in Proc. IEEE ICIP, 2012.

	Last updated: 2013-02-06
	Author: Jin-Hwan, Kim.
 */

#include "dehazing.h"

#define MY_LOGD(fmt, ...)    do { printf("[%s] "fmt, __FUNCTION__, __VA_ARGS__); printf("\n"); } while (0)
#define MY_LOGE              MY_LOGD

/* 
	Function: IplImageToInt
	Description: Convert the opencv type IplImage to integer

	Parameters: 
		imInput - input IplImage
	Return:
		m_pnYImg - output integer array
*/
void dehazing::IplImageToInt(IplImage* imInput)
{
	int nY, nX;
	int nStep;

	nStep = imInput->widthStep;

	for(nY=0; nY<m_nHei; nY++)
	{
		for(nX=0; nX<m_nWid; nX++)
		{
			// (1) IplImage 를 YUV의 Y채널로 변환 하여 int형 배열 m_pnYImg에 저장
			m_pnYImg[nY*m_nWid+nX] =
				(19595 * (uchar)imInput->imageData[nY*nStep+nX*3+2]
			+ 38469 * (uchar)imInput->imageData[nY*nStep+nX*3+1] 
			+ 7471 * (uchar)imInput->imageData[nY*nStep+nX*3]) >> 16;
		}
	}
}

/* 
	Function: IplImageToIntColor
	Description: Convert the opencv type IplImage to integer (3 arrays)

	Parameters: 
		imInput - input IplImage
	Return:
		m_pnRImg - output integer arrays R
		m_pnGImg - output integer arrays G
		m_pnBImg - output integer arrays B
*/
void dehazing::IplImageToIntColor(cv::Mat& mSrc)
{
    uchar* pLineSrc;
    int nCols = m_nWid * mSrc.channels();
    int dstPos = 0;
    
	for(int nY=0; nY<m_nHei; nY++)
	{
	    pLineSrc = mSrc.ptr<uchar>(nY);
	    
		for(int nX=0; nX<nCols; nX+=3)
		{
			m_pnBImg[dstPos] = pLineSrc[nX];
			m_pnGImg[dstPos] = pLineSrc[nX+1];
			m_pnRImg[dstPos++] = pLineSrc[nX+2];
		}
	}
}

/* 
	Function: DownsampleImage
	Description: Downsample the image to fixed sized image (320 x 240)

	Parameters:(hidden) 
		m_pnYImg - input Y Image
	Return:
		m_pnSmallYImg - output down sampled image
*/
void dehazing::DownsampleImage()
{
	int nX, nY;

	float fRatioY, fRatioX;
	// 다운샘플링 비율 결정
	fRatioX = (float)m_nWid/(float)320;
	fRatioY = (float)m_nHei/(float)240;

	for(nY=0; nY<240; nY++)
	{
		for(nX=0; nX<320; nX++)
		{
			// (1) 멤버 변수인 m_pnYImg를 m_pnSmallYImg로 다운샘플링(크기는 320x240)
			m_pnSmallYImg[nY*320+nX] = m_pnYImg[(int)(nY*fRatioY)*m_nWid+(int)(nX*fRatioX)];
		}
	}
}

/* 
	Function: DownsampleImageColor
	Description: Downsample the image to fixed sized image (320 x 240) ** for color

	Parameters:(hidden) 
		m_pnRImg - input R Image
		m_pnGImg - input G Image
		m_pnBImg - input B Image
	Return:
		m_pnSmallRImg - output down sampled image
		m_pnSmallGImg - output down sampled image
		m_pnSmallBImg - output down sampled image
*/
void dehazing::DownsampleImageColor()
{
	int nX, nY;

	float fRatioY, fRatioX;
	// 다운샘플링 비율 결정
	fRatioX = (float)m_nWid/(float)320;
	fRatioY = (float)m_nHei/(float)240;

	for(nY=0; nY<240; nY++)
	{
		for(nX=0; nX<320; nX++)
		{
			// (1) 멤버 변수인 m_pnYImg를 m_pnSmallYImg로 다운샘플링(크기는 320x240)
			m_pnSmallRImg[nY*320+nX] = m_pnRImg[(int)(nY*fRatioY)*m_nWid+(int)(nX*fRatioX)];
			m_pnSmallGImg[nY*320+nX] = m_pnGImg[(int)(nY*fRatioY)*m_nWid+(int)(nX*fRatioX)];
			m_pnSmallBImg[nY*320+nX] = m_pnBImg[(int)(nY*fRatioY)*m_nWid+(int)(nX*fRatioX)];
		}
	}
}


/* 
	Function: UpsampleImage
	Description: upsample the fixed sized transmission to original size

	Parameters:(hidden) 
		m_pfSmallTransR - input transmission (320 x 240)
	Return:
		m_pfTransmission - output transmission 
		
*/
void dehazing::UpsampleTransmission()
{
	int nX, nY;

	float fRatioY, fRatioX;
	// 업샘플링 비율 결정
	fRatioX = (float)320/(float)m_nWid;
	fRatioY = (float)240/(float)m_nHei;

	for(nY=0; nY<m_nHei; nY++)
	{
		for(nX=0; nX<m_nWid; nX++)
		{
			// (1) 멤버 변수인 m_pfSmallTransR를 m_pfTransmission로 업샘플링
			m_pfTransmission[nY*m_nWid+nX] = m_pfSmallTrans[(int)(nY*fRatioY)*320+(int)(nX*fRatioX)];
		}
	}
}

/* 
	Function: MakeExpLUT
	Description: Make a Look Up Table(LUT) for applying previous information.

	Return:
		m_pfExpLUT - output table 
		
*/
void dehazing::MakeExpLUT()
{
	int nIdx;

	for ( nIdx = 0 ; nIdx < 256; nIdx++ )
	{
		m_pfExpLUT[nIdx] = exp(-(float)(nIdx*nIdx)/10.0f);	
	}
}

/* 
	Function: GuideLUTMaker
	Description: Make a Look Up Table(LUT) for guided filtering

	Return:
		m_pfGuidedLUT - output table
		
*/
void dehazing::GuideLUTMaker()
{
	int nX, nY;

	for ( nX = 0 ; nX < m_nGBlockSize/2; nX++ )
	{
		for ( nY = 0 ; nY < m_nGBlockSize/2 ; nY++ )
		{
			m_pfGuidedLUT[nY*m_nGBlockSize+nX] = (exp(-((nX-m_nGBlockSize/2+1)*(nX-m_nGBlockSize/2+1)+(nY-m_nGBlockSize/2+1)*(nY-m_nGBlockSize/2+1))/(2*m_fGSigma*m_fGSigma)));
//printf("%d, ", nY*m_nGBlockSize+nX);

			m_pfGuidedLUT[(m_nGBlockSize-nY-1)*m_nGBlockSize+nX] = (exp(-((nX-m_nGBlockSize/2+1)*(nX-m_nGBlockSize/2+1)+(nY-m_nGBlockSize/2+1)*(nY-m_nGBlockSize/2+1))/(2*m_fGSigma*m_fGSigma)));
//printf("%d, ", (m_nGBlockSize-nY-1)*m_nGBlockSize+nX);

			m_pfGuidedLUT[nY*m_nGBlockSize+m_nGBlockSize-nX-1] = (exp(-((nX-m_nGBlockSize/2+1)*(nX-m_nGBlockSize/2+1)+(nY-m_nGBlockSize/2+1)*(nY-m_nGBlockSize/2+1))/(2*m_fGSigma*m_fGSigma)));
//printf("%d, ", nY*m_nGBlockSize+m_nGBlockSize-nX-1);

			m_pfGuidedLUT[(m_nGBlockSize-nY-1)*m_nGBlockSize+m_nGBlockSize-nX-1] = (exp(-((nX-m_nGBlockSize/2+1)*(nX-m_nGBlockSize/2+1)+(nY-m_nGBlockSize/2+1)*(nY-m_nGBlockSize/2+1))/(2*m_fGSigma*m_fGSigma)));
//printf("%d\r\n", (m_nGBlockSize-nY-1)*m_nGBlockSize+m_nGBlockSize-nX-1);
		}
	}

#if 0
    for (int i=0; i<m_nGBlockSize*m_nGBlockSize; i++)
    {
        printf("%f, ", m_pfGuidedLUT[i]);
        if ( i%10 == 9 )
            printf("\n");
    }
#endif
}

/* 
	Function: GammaLUTMaker
	Description: Make a Look Up Table(LUT) for gamma correction

	parameter:
		fParameter - gamma value.
	Return:
		m_pfGuidedLUT - output table
		
*/
void dehazing::GammaLUTMaker(float fParameter)
{
	int nIdx;

	for(nIdx=0; nIdx<256; nIdx++)
	{
		m_pucGammaLUT[nIdx] = (uchar)(pow((float)nIdx/255, fParameter)*255.0f);
	}
}

double lut_GuideFilter[1600] =
{
    0.027052, 0.032549, 0.038774, 0.045730, 0.053397, 0.061729, 0.070651, 0.080058, 0.089815, 0.099759,
    0.109701, 0.119433, 0.128735, 0.137381, 0.145148, 0.151829, 0.157237, 0.161218, 0.163654, 0.164474,
    0.164474, 0.163654, 0.161218, 0.157237, 0.151829, 0.145148, 0.137381, 0.128735, 0.119433, 0.109701,
    0.099759, 0.089815, 0.080058, 0.070651, 0.061729, 0.053397, 0.045730, 0.038774, 0.032549, 0.027052,
    0.032549, 0.039164, 0.046654, 0.055023, 0.064248, 0.074274, 0.085009, 0.096328, 0.108067, 0.120032,
    0.131994, 0.143704, 0.154896, 0.165299, 0.174645, 0.182684, 0.189191, 0.193980, 0.196912, 0.197899,
    0.197899, 0.196912, 0.193980, 0.189191, 0.182684, 0.174645, 0.165299, 0.154896, 0.143704, 0.131994,
    0.120032, 0.108067, 0.096328, 0.085009, 0.074274, 0.064248, 0.055023, 0.046654, 0.039164, 0.032549,
    0.038774, 0.046654, 0.055576, 0.065546, 0.076536, 0.088478, 0.101266, 0.114750, 0.128735, 0.142987,
    0.157237, 0.171187, 0.184520, 0.196912, 0.208045, 0.217621, 0.225373, 0.231078, 0.234570, 0.235746,
    0.235746, 0.234570, 0.231078, 0.225373, 0.217621, 0.208045, 0.196912, 0.184520, 0.171187, 0.157237,
    0.142987, 0.128735, 0.114750, 0.101266, 0.088478, 0.076536, 0.065546, 0.055576, 0.046654, 0.038774,
    0.045730, 0.055023, 0.065546, 0.077305, 0.090265, 0.104350, 0.119433, 0.135335, 0.151829, 0.168638,
    0.185444, 0.201897, 0.217621, 0.232236, 0.245367, 0.256661, 0.265803, 0.272532, 0.276651, 0.278037,
    0.278037, 0.276651, 0.272532, 0.265803, 0.256661, 0.245367, 0.232236, 0.217621, 0.201897, 0.185444,
    0.168638, 0.151829, 0.135335, 0.119433, 0.104350, 0.090265, 0.077305, 0.065546, 0.055023, 0.045730,
    0.053397, 0.064248, 0.076536, 0.090265, 0.105399, 0.121846, 0.139457, 0.158025, 0.177284, 0.196912,
    0.216536, 0.235746, 0.254107, 0.271173, 0.286505, 0.299692, 0.310367, 0.318224, 0.323033, 0.324652,
    0.324652, 0.323033, 0.318224, 0.310367, 0.299692, 0.286505, 0.271173, 0.254107, 0.235746, 0.216536,
    0.196912, 0.177284, 0.158025, 0.139457, 0.121846, 0.105399, 0.090265, 0.076536, 0.064248, 0.053397,
    0.061729, 0.074274, 0.088478, 0.104350, 0.121846, 0.140858, 0.161218, 0.182684, 0.204948, 0.227638,
    0.250324, 0.272532, 0.293758, 0.313486, 0.331211, 0.346456, 0.358796, 0.367879, 0.373439, 0.375311,
    0.375311, 0.373439, 0.367879, 0.358796, 0.346456, 0.331211, 0.313486, 0.293758, 0.272532, 0.250324,
    0.227638, 0.204948, 0.182684, 0.161218, 0.140858, 0.121846, 0.104350, 0.088478, 0.074274, 0.061729,
    0.070651, 0.085009, 0.101266, 0.119433, 0.139457, 0.161218, 0.184520, 0.209088, 0.234570, 0.260540,
    0.286505, 0.311923, 0.336216, 0.358796, 0.379083, 0.396531, 0.410656, 0.421052, 0.427415, 0.429557,
    0.429557, 0.427415, 0.421052, 0.410656, 0.396531, 0.379083, 0.358796, 0.336216, 0.311923, 0.286505,
    0.260540, 0.234570, 0.209088, 0.184520, 0.161218, 0.139457, 0.119433, 0.101266, 0.085009, 0.070651,
    0.080058, 0.096328, 0.114750, 0.135335, 0.158025, 0.182684, 0.209088, 0.236928, 0.265803, 0.295230,
    0.324652, 0.353455, 0.380983, 0.406570, 0.429557, 0.449329, 0.465334, 0.477114, 0.484325, 0.486752,
    0.486752, 0.484325, 0.477114, 0.465334, 0.449329, 0.429557, 0.406570, 0.380983, 0.353455, 0.324652,
    0.295230, 0.265803, 0.236928, 0.209088, 0.182684, 0.158025, 0.135335, 0.114750, 0.096328, 0.080058,
    0.089815, 0.108067, 0.128735, 0.151829, 0.177284, 0.204948, 0.234570, 0.265803, 0.298197, 0.331211,
    0.364219, 0.396531, 0.427415, 0.456120, 0.481909, 0.504090, 0.522046, 0.535261, 0.543351, 0.546074,
    0.546074, 0.543351, 0.535261, 0.522046, 0.504090, 0.481909, 0.456120, 0.427415, 0.396531, 0.364219,
    0.331211, 0.298197, 0.265803, 0.234570, 0.204948, 0.177284, 0.151829, 0.128735, 0.108067, 0.089815,
    0.099759, 0.120032, 0.142987, 0.168638, 0.196912, 0.227638, 0.260540, 0.295230, 0.331211, 0.367879,
    0.404542, 0.440432, 0.474734, 0.506617, 0.535261, 0.559898, 0.579842, 0.594521, 0.603506, 0.606531,
    0.606531, 0.603506, 0.594521, 0.579842, 0.559898, 0.535261, 0.506617, 0.474734, 0.440432, 0.404542,
    0.367879, 0.331211, 0.295230, 0.260540, 0.227638, 0.196912, 0.168638, 0.142987, 0.120032, 0.099759,
    0.109701, 0.131994, 0.157237, 0.185444, 0.216536, 0.250324, 0.286505, 0.324652, 0.364219, 0.404542,
    0.444858, 0.484325, 0.522046, 0.557106, 0.588605, 0.615697, 0.637628, 0.653770, 0.663650, 0.666977,
    0.666977, 0.663650, 0.653770, 0.637628, 0.615697, 0.588605, 0.557106, 0.522046, 0.484325, 0.444858,
    0.404542, 0.364219, 0.324652, 0.286505, 0.250324, 0.216536, 0.185444, 0.157237, 0.131994, 0.109701,
    0.119433, 0.143704, 0.171187, 0.201897, 0.235746, 0.272532, 0.311923, 0.353455, 0.396531, 0.440432,
    0.484325, 0.527292, 0.568360, 0.606531, 0.640824, 0.670320, 0.694197, 0.711770, 0.722527, 0.726149,
    0.726149, 0.722527, 0.711770, 0.694197, 0.670320, 0.640824, 0.606531, 0.568360, 0.527292, 0.484325,
    0.440432, 0.396531, 0.353455, 0.311923, 0.272532, 0.235746, 0.201897, 0.171187, 0.143704, 0.119433,
    0.128735, 0.154896, 0.184520, 0.217621, 0.254107, 0.293758, 0.336216, 0.380983, 0.427415, 0.474734,
    0.522046, 0.568360, 0.612626, 0.653770, 0.690734, 0.722527, 0.748264, 0.767206, 0.778801, 0.782705,
    0.782705, 0.778801, 0.767206, 0.748264, 0.722527, 0.690734, 0.653770, 0.612626, 0.568360, 0.522046,
    0.474734, 0.427415, 0.380983, 0.336216, 0.293758, 0.254107, 0.217621, 0.184520, 0.154896, 0.128735,
    0.137381, 0.165299, 0.196912, 0.232236, 0.271173, 0.313486, 0.358796, 0.406570, 0.456120, 0.506617,
    0.557106, 0.606531, 0.653770, 0.697676, 0.737123, 0.771052, 0.798516, 0.818731, 0.831104, 0.835270,
    0.835270, 0.831104, 0.818731, 0.798516, 0.771052, 0.737123, 0.697676, 0.653770, 0.606531, 0.557106,
    0.506617, 0.456120, 0.406570, 0.358796, 0.313486, 0.271173, 0.232236, 0.196912, 0.165299, 0.137381,
    0.145148, 0.174645, 0.208045, 0.245367, 0.286505, 0.331211, 0.379083, 0.429557, 0.481909, 0.535261,
    0.588605, 0.640824, 0.690734, 0.737123, 0.778801, 0.814647, 0.843665, 0.865022, 0.878095, 0.882497,
    0.882497, 0.878095, 0.865022, 0.843665, 0.814647, 0.778801, 0.737123, 0.690734, 0.640824, 0.588605,
    0.535261, 0.481909, 0.429557, 0.379083, 0.331211, 0.286505, 0.245367, 0.208045, 0.174645, 0.145148,
    0.151829, 0.182684, 0.217621, 0.256661, 0.299692, 0.346456, 0.396531, 0.449329, 0.504090, 0.559898,
    0.615697, 0.670320, 0.722527, 0.771052, 0.814647, 0.852144, 0.882497, 0.904837, 0.918512, 0.923116,
    0.923116, 0.918512, 0.904837, 0.882497, 0.852144, 0.814647, 0.771052, 0.722527, 0.670320, 0.615697,
    0.559898, 0.504090, 0.449329, 0.396531, 0.346456, 0.299692, 0.256661, 0.217621, 0.182684, 0.151829,
    0.157237, 0.189191, 0.225373, 0.265803, 0.310367, 0.358796, 0.410656, 0.465334, 0.522046, 0.579842,
    0.637628, 0.694197, 0.748264, 0.798516, 0.843665, 0.882497, 0.913931, 0.937067, 0.951229, 0.955997,
    0.955997, 0.951229, 0.937067, 0.913931, 0.882497, 0.843665, 0.798516, 0.748264, 0.694197, 0.637628,
    0.579842, 0.522046, 0.465334, 0.410656, 0.358796, 0.310367, 0.265803, 0.225373, 0.189191, 0.157237,
    0.161218, 0.193980, 0.231078, 0.272532, 0.318224, 0.367879, 0.421052, 0.477114, 0.535261, 0.594521,
    0.653770, 0.711770, 0.767206, 0.818731, 0.865022, 0.904837, 0.937067, 0.960789, 0.975310, 0.980199,
    0.980199, 0.975310, 0.960789, 0.937067, 0.904837, 0.865022, 0.818731, 0.767206, 0.711770, 0.653770,
    0.594521, 0.535261, 0.477114, 0.421052, 0.367879, 0.318224, 0.272532, 0.231078, 0.193980, 0.161218,
    0.163654, 0.196912, 0.234570, 0.276651, 0.323033, 0.373439, 0.427415, 0.484325, 0.543351, 0.603506,
    0.663650, 0.722527, 0.778801, 0.831104, 0.878095, 0.918512, 0.951229, 0.975310, 0.990050, 0.995012,
    0.995012, 0.990050, 0.975310, 0.951229, 0.918512, 0.878095, 0.831104, 0.778801, 0.722527, 0.663650,
    0.603506, 0.543351, 0.484325, 0.427415, 0.373439, 0.323033, 0.276651, 0.234570, 0.196912, 0.163654,
    0.164474, 0.197899, 0.235746, 0.278037, 0.324652, 0.375311, 0.429557, 0.486752, 0.546074, 0.606531,
    0.666977, 0.726149, 0.782705, 0.835270, 0.882497, 0.923116, 0.955997, 0.980199, 0.995012, 1.000000,
    1.000000, 0.995012, 0.980199, 0.955997, 0.923116, 0.882497, 0.835270, 0.782705, 0.726149, 0.666977,
    0.606531, 0.546074, 0.486752, 0.429557, 0.375311, 0.324652, 0.278037, 0.235746, 0.197899, 0.164474,
    0.164474, 0.197899, 0.235746, 0.278037, 0.324652, 0.375311, 0.429557, 0.486752, 0.546074, 0.606531,
    0.666977, 0.726149, 0.782705, 0.835270, 0.882497, 0.923116, 0.955997, 0.980199, 0.995012, 1.000000,
    1.000000, 0.995012, 0.980199, 0.955997, 0.923116, 0.882497, 0.835270, 0.782705, 0.726149, 0.666977,
    0.606531, 0.546074, 0.486752, 0.429557, 0.375311, 0.324652, 0.278037, 0.235746, 0.197899, 0.164474,
    0.163654, 0.196912, 0.234570, 0.276651, 0.323033, 0.373439, 0.427415, 0.484325, 0.543351, 0.603506,
    0.663650, 0.722527, 0.778801, 0.831104, 0.878095, 0.918512, 0.951229, 0.975310, 0.990050, 0.995012,
    0.995012, 0.990050, 0.975310, 0.951229, 0.918512, 0.878095, 0.831104, 0.778801, 0.722527, 0.663650,
    0.603506, 0.543351, 0.484325, 0.427415, 0.373439, 0.323033, 0.276651, 0.234570, 0.196912, 0.163654,
    0.161218, 0.193980, 0.231078, 0.272532, 0.318224, 0.367879, 0.421052, 0.477114, 0.535261, 0.594521,
    0.653770, 0.711770, 0.767206, 0.818731, 0.865022, 0.904837, 0.937067, 0.960789, 0.975310, 0.980199,
    0.980199, 0.975310, 0.960789, 0.937067, 0.904837, 0.865022, 0.818731, 0.767206, 0.711770, 0.653770,
    0.594521, 0.535261, 0.477114, 0.421052, 0.367879, 0.318224, 0.272532, 0.231078, 0.193980, 0.161218,
    0.157237, 0.189191, 0.225373, 0.265803, 0.310367, 0.358796, 0.410656, 0.465334, 0.522046, 0.579842,
    0.637628, 0.694197, 0.748264, 0.798516, 0.843665, 0.882497, 0.913931, 0.937067, 0.951229, 0.955997,
    0.955997, 0.951229, 0.937067, 0.913931, 0.882497, 0.843665, 0.798516, 0.748264, 0.694197, 0.637628,
    0.579842, 0.522046, 0.465334, 0.410656, 0.358796, 0.310367, 0.265803, 0.225373, 0.189191, 0.157237,
    0.151829, 0.182684, 0.217621, 0.256661, 0.299692, 0.346456, 0.396531, 0.449329, 0.504090, 0.559898,
    0.615697, 0.670320, 0.722527, 0.771052, 0.814647, 0.852144, 0.882497, 0.904837, 0.918512, 0.923116,
    0.923116, 0.918512, 0.904837, 0.882497, 0.852144, 0.814647, 0.771052, 0.722527, 0.670320, 0.615697,
    0.559898, 0.504090, 0.449329, 0.396531, 0.346456, 0.299692, 0.256661, 0.217621, 0.182684, 0.151829,
    0.145148, 0.174645, 0.208045, 0.245367, 0.286505, 0.331211, 0.379083, 0.429557, 0.481909, 0.535261,
    0.588605, 0.640824, 0.690734, 0.737123, 0.778801, 0.814647, 0.843665, 0.865022, 0.878095, 0.882497,
    0.882497, 0.878095, 0.865022, 0.843665, 0.814647, 0.778801, 0.737123, 0.690734, 0.640824, 0.588605,
    0.535261, 0.481909, 0.429557, 0.379083, 0.331211, 0.286505, 0.245367, 0.208045, 0.174645, 0.145148,
    0.137381, 0.165299, 0.196912, 0.232236, 0.271173, 0.313486, 0.358796, 0.406570, 0.456120, 0.506617,
    0.557106, 0.606531, 0.653770, 0.697676, 0.737123, 0.771052, 0.798516, 0.818731, 0.831104, 0.835270,
    0.835270, 0.831104, 0.818731, 0.798516, 0.771052, 0.737123, 0.697676, 0.653770, 0.606531, 0.557106,
    0.506617, 0.456120, 0.406570, 0.358796, 0.313486, 0.271173, 0.232236, 0.196912, 0.165299, 0.137381,
    0.128735, 0.154896, 0.184520, 0.217621, 0.254107, 0.293758, 0.336216, 0.380983, 0.427415, 0.474734,
    0.522046, 0.568360, 0.612626, 0.653770, 0.690734, 0.722527, 0.748264, 0.767206, 0.778801, 0.782705,
    0.782705, 0.778801, 0.767206, 0.748264, 0.722527, 0.690734, 0.653770, 0.612626, 0.568360, 0.522046,
    0.474734, 0.427415, 0.380983, 0.336216, 0.293758, 0.254107, 0.217621, 0.184520, 0.154896, 0.128735,
    0.119433, 0.143704, 0.171187, 0.201897, 0.235746, 0.272532, 0.311923, 0.353455, 0.396531, 0.440432,
    0.484325, 0.527292, 0.568360, 0.606531, 0.640824, 0.670320, 0.694197, 0.711770, 0.722527, 0.726149,
    0.726149, 0.722527, 0.711770, 0.694197, 0.670320, 0.640824, 0.606531, 0.568360, 0.527292, 0.484325,
    0.440432, 0.396531, 0.353455, 0.311923, 0.272532, 0.235746, 0.201897, 0.171187, 0.143704, 0.119433,
    0.109701, 0.131994, 0.157237, 0.185444, 0.216536, 0.250324, 0.286505, 0.324652, 0.364219, 0.404542,
    0.444858, 0.484325, 0.522046, 0.557106, 0.588605, 0.615697, 0.637628, 0.653770, 0.663650, 0.666977,
    0.666977, 0.663650, 0.653770, 0.637628, 0.615697, 0.588605, 0.557106, 0.522046, 0.484325, 0.444858,
    0.404542, 0.364219, 0.324652, 0.286505, 0.250324, 0.216536, 0.185444, 0.157237, 0.131994, 0.109701,
    0.099759, 0.120032, 0.142987, 0.168638, 0.196912, 0.227638, 0.260540, 0.295230, 0.331211, 0.367879,
    0.404542, 0.440432, 0.474734, 0.506617, 0.535261, 0.559898, 0.579842, 0.594521, 0.603506, 0.606531,
    0.606531, 0.603506, 0.594521, 0.579842, 0.559898, 0.535261, 0.506617, 0.474734, 0.440432, 0.404542,
    0.367879, 0.331211, 0.295230, 0.260540, 0.227638, 0.196912, 0.168638, 0.142987, 0.120032, 0.099759,
    0.089815, 0.108067, 0.128735, 0.151829, 0.177284, 0.204948, 0.234570, 0.265803, 0.298197, 0.331211,
    0.364219, 0.396531, 0.427415, 0.456120, 0.481909, 0.504090, 0.522046, 0.535261, 0.543351, 0.546074,
    0.546074, 0.543351, 0.535261, 0.522046, 0.504090, 0.481909, 0.456120, 0.427415, 0.396531, 0.364219,
    0.331211, 0.298197, 0.265803, 0.234570, 0.204948, 0.177284, 0.151829, 0.128735, 0.108067, 0.089815,
    0.080058, 0.096328, 0.114750, 0.135335, 0.158025, 0.182684, 0.209088, 0.236928, 0.265803, 0.295230,
    0.324652, 0.353455, 0.380983, 0.406570, 0.429557, 0.449329, 0.465334, 0.477114, 0.484325, 0.486752,
    0.486752, 0.484325, 0.477114, 0.465334, 0.449329, 0.429557, 0.406570, 0.380983, 0.353455, 0.324652,
    0.295230, 0.265803, 0.236928, 0.209088, 0.182684, 0.158025, 0.135335, 0.114750, 0.096328, 0.080058,
    0.070651, 0.085009, 0.101266, 0.119433, 0.139457, 0.161218, 0.184520, 0.209088, 0.234570, 0.260540,
    0.286505, 0.311923, 0.336216, 0.358796, 0.379083, 0.396531, 0.410656, 0.421052, 0.427415, 0.429557,
    0.429557, 0.427415, 0.421052, 0.410656, 0.396531, 0.379083, 0.358796, 0.336216, 0.311923, 0.286505,
    0.260540, 0.234570, 0.209088, 0.184520, 0.161218, 0.139457, 0.119433, 0.101266, 0.085009, 0.070651,
    0.061729, 0.074274, 0.088478, 0.104350, 0.121846, 0.140858, 0.161218, 0.182684, 0.204948, 0.227638,
    0.250324, 0.272532, 0.293758, 0.313486, 0.331211, 0.346456, 0.358796, 0.367879, 0.373439, 0.375311,
    0.375311, 0.373439, 0.367879, 0.358796, 0.346456, 0.331211, 0.313486, 0.293758, 0.272532, 0.250324,
    0.227638, 0.204948, 0.182684, 0.161218, 0.140858, 0.121846, 0.104350, 0.088478, 0.074274, 0.061729,
    0.053397, 0.064248, 0.076536, 0.090265, 0.105399, 0.121846, 0.139457, 0.158025, 0.177284, 0.196912,
    0.216536, 0.235746, 0.254107, 0.271173, 0.286505, 0.299692, 0.310367, 0.318224, 0.323033, 0.324652,
    0.324652, 0.323033, 0.318224, 0.310367, 0.299692, 0.286505, 0.271173, 0.254107, 0.235746, 0.216536,
    0.196912, 0.177284, 0.158025, 0.139457, 0.121846, 0.105399, 0.090265, 0.076536, 0.064248, 0.053397,
    0.045730, 0.055023, 0.065546, 0.077305, 0.090265, 0.104350, 0.119433, 0.135335, 0.151829, 0.168638,
    0.185444, 0.201897, 0.217621, 0.232236, 0.245367, 0.256661, 0.265803, 0.272532, 0.276651, 0.278037,
    0.278037, 0.276651, 0.272532, 0.265803, 0.256661, 0.245367, 0.232236, 0.217621, 0.201897, 0.185444,
    0.168638, 0.151829, 0.135335, 0.119433, 0.104350, 0.090265, 0.077305, 0.065546, 0.055023, 0.045730,
    0.038774, 0.046654, 0.055576, 0.065546, 0.076536, 0.088478, 0.101266, 0.114750, 0.128735, 0.142987,
    0.157237, 0.171187, 0.184520, 0.196912, 0.208045, 0.217621, 0.225373, 0.231078, 0.234570, 0.235746,
    0.235746, 0.234570, 0.231078, 0.225373, 0.217621, 0.208045, 0.196912, 0.184520, 0.171187, 0.157237,
    0.142987, 0.128735, 0.114750, 0.101266, 0.088478, 0.076536, 0.065546, 0.055576, 0.046654, 0.038774,
    0.032549, 0.039164, 0.046654, 0.055023, 0.064248, 0.074274, 0.085009, 0.096328, 0.108067, 0.120032,
    0.131994, 0.143704, 0.154896, 0.165299, 0.174645, 0.182684, 0.189191, 0.193980, 0.196912, 0.197899,
    0.197899, 0.196912, 0.193980, 0.189191, 0.182684, 0.174645, 0.165299, 0.154896, 0.143704, 0.131994,
    0.120032, 0.108067, 0.096328, 0.085009, 0.074274, 0.064248, 0.055023, 0.046654, 0.039164, 0.032549,
    0.027052, 0.032549, 0.038774, 0.045730, 0.053397, 0.061729, 0.070651, 0.080058, 0.089815, 0.099759,
    0.109701, 0.119433, 0.128735, 0.137381, 0.145148, 0.151829, 0.157237, 0.161218, 0.163654, 0.164474,
    0.164474, 0.163654, 0.161218, 0.157237, 0.151829, 0.145148, 0.137381, 0.128735, 0.119433, 0.109701,
    0.099759, 0.089815, 0.080058, 0.070651, 0.061729, 0.053397, 0.045730, 0.038774, 0.032549, 0.027052
};